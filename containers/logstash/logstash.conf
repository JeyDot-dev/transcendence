input {
  gelf {
    port => 12201
  }
}


filter {
    if [docker][name] == "nginx" {
        grok {
            match => { "message" => "%{COMBINEDAPACHELOG}" }
        }
        date {
            match => [ "timestamp" , "dd/MMM/yyyy:HH:mm:ss Z" ]
        }
        mutate {
            add_field => { "service" => "nginx" }
        }
    } else if [docker][name] == "daphne" {
        grok {
            match => { "message" => "%{TIMESTAMP_ISO8601:timestamp} %{LOGLEVEL:loglevel} %{GREEDYDATA:message}" }
        }
        date {
            match => [ "timestamp" , "ISO8601" ]
        }
        mutate {
            add_field => { "service" => "daphne" }
        }
    } else if [docker][name] == "gunicorn" {
        grok {
            match => { "message" => "%{TIMESTAMP_ISO8601:timestamp} \[%{WORD:loglevel}\] %{GREEDYDATA:message}" }
        }
        date {
            match => [ "timestamp" , "ISO8601" ]
        }
        mutate {
            add_field => { "service" => "gunicorn" }
        }
    } else if [docker][name] == "redis" {
        grok {
            match => { "message" => "\[%{TIMESTAMP_ISO8601:timestamp}\] %{GREEDYDATA:message}" }
        }
        date {
            match => [ "timestamp" , "ISO8601" ]
        }
        mutate {
            add_field => { "service" => "redis" }
        }
    } else if [docker][name] == "postgresql" {
        grok {
            match => { "message" => "%{TIMESTAMP_ISO8601:timestamp} %{WORD:loglevel}: %{GREEDYDATA:message}" }
        }
        date {
            match => [ "timestamp" , "ISO8601" ]
        }
        mutate {
            add_field => { "service" => "postgresql" }
        }
    }
}


output {
    elasticsearch {
# index => "logstash-%{+YYYY.MM.dd}"
        ssl => true
        ilm_enabled => "true"
        ilm_rollover_alias => "logstash"
        ilm_pattern => "{now/d}-000001"
        ilm_policy  => "logstash-policy"
        action => "index"
        manage_template => false
# index => "logstash-%{+YYYY.MM.dd}-"
        hosts=> "${ELASTIC_HOSTS}"
        user=> "${ELASTIC_USER}"
        password=> "${ELASTIC_PASSWORD}"
        cacert=> "/usr/share/logstash/certs/ca/ca.crt"
    }
}

